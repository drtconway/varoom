#include "varoom/seq/kimmo.hpp"

#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE codec8 tests
#include <boost/test/unit_test.hpp>

#include "varoom/util/files.hpp"

#include <unordered_map>
#include <random>

namespace // anonymous
{
    void count_ngrams(const std::string& p_str, const size_t& p_N, std::unordered_map<uint64_t,size_t>& p_counts)
    {
        const uint64_t M = (1ULL << (8*p_N)) - 1;
        uint64_t x = 0;
        for (size_t i = 0; i < p_str.size(); ++i)
        {
            x = ((x << 8) | uint8_t(p_str[i])) & M;
            if (i >= p_N - 1)
            {
                p_counts[x] += 1;
            }
        }
    }

    std::string render(const size_t& p_N, uint64_t p_x)
    {
        std::string r;
        r.reserve(p_N);
        for (size_t i = 0; i < p_N; ++i)
        {
            r.push_back(char(p_x & 0xFF));
            p_x >>= 8;
        }
        return std::string(r.rbegin(), r.rend());
    }

    using model0 = std::unordered_map<std::string,double>;
    using model = std::unordered_map<std::string,std::unordered_map<char,double>>;

    void learn_model(const std::string& p_text, const size_t& p_N)
    {
        model M;
        for (size_t i = 0; i < p_text.size() - p_N + 1; ++i)
        {
            std::string ctx = p_text.substr(i, p_N);
            char c = p_text[i+p_N];
            M[ctx][c] += 1;
        }

        double t0 = 0;
        for (auto itr = M.begin(); itr != M.end(); ++itr)
        {
            double t = 0;
            for (auto jtr = itr->second.begin(); jtr != itr->second.end(); ++jtr)
            {
                t += jtr->second;
            }
            for (auto jtr = itr->second.begin(); jtr != itr->second.end(); ++jtr)
            {
                std::cout << "M[\"" << itr->first << "\"]['" << jtr->first << "'] = " << (double(jtr->second)/t) << ";" << std::endl;
            }
            t0 += t;
        }
        for (auto itr = M.begin(); itr != M.end(); ++itr)
        {
            double t = 0;
            for (auto jtr = itr->second.begin(); jtr != itr->second.end(); ++jtr)
            {
                t += jtr->second;
            }
            std::cout << "M0[\"" << itr->first << "\"] = " << (t/t0) << ";" << std::endl;
        }
    }

    std::string run_model(const size_t& p_seed, const size_t& p_max)
    {
        std::mt19937_64 rng(p_seed);
        std::uniform_real_distribution<double> U;

        model0 M0;
        M0["AA"] = 0.0525637;
        M0["AC"] = 0.0251886;
        M0["AG"] = 0.0348649;
        M0["AN"] = 2.56157e-08;
        M0["AT"] = 0.0415609;
        M0["Aa"] = 9.15632e-05;
        M0["Ac"] = 5.32806e-05;
        M0["Ag"] = 9.15247e-05;
        M0["At"] = 0.000133778;
        M0["CA"] = 0.0358204;
        M0["CC"] = 0.0235972;
        M0["CG"] = 0.00437855;
        M0["CN"] = 5.12313e-08;
        M0["CT"] = 0.0349174;
        M0["Ca"] = 9.07691e-05;
        M0["Cc"] = 3.86156e-05;
        M0["Cg"] = 1.58177e-05;
        M0["Ct"] = 0.000137915;
        M0["GA"] = 0.0301046;
        M0["GC"] = 0.0197936;
        M0["GG"] = 0.023681;
        M0["GN"] = 1.28078e-08;
        M0["GT"] = 0.025434;
        M0["Ga"] = 6.92135e-05;
        M0["Gc"] = 4.09851e-05;
        M0["Gg"] = 5.64953e-05;
        M0["Gt"] = 0.000112184;
        M0["NA"] = 5.12313e-08;
        M0["NC"] = 2.56157e-08;
        M0["NG"] = 5.12313e-08;
        M0["NN"] = 0.0438028;
        M0["NT"] = 3.84235e-08;
        M0["Nc"] = 2.56157e-08;
        M0["TA"] = 0.0357329;
        M0["TC"] = 0.0301422;
        M0["TG"] = 0.0360823;
        M0["TN"] = 6.40391e-08;
        M0["TT"] = 0.0529679;
        M0["Ta"] = 7.54765e-05;
        M0["Tc"] = 5.32037e-05;
        M0["Tg"] = 8.03179e-05;
        M0["Tt"] = 0.000113938;
        M0["aA"] = 0.000114335;
        M0["aC"] = 0.000107355;
        M0["aG"] = 0.000137428;
        M0["aN"] = 1.28078e-08;
        M0["aT"] = 0.000132792;
        M0["aa"] = 0.0439794;
        M0["ac"] = 0.0228364;
        M0["ag"] = 0.0306958;
        M0["at"] = 0.035181;
        M0["cA"] = 8.05997e-05;
        M0["cC"] = 5.58677e-05;
        M0["cG"] = 1.74058e-05;
        M0["cT"] = 9.31257e-05;
        M0["ca"] = 0.0329441;
        M0["cc"] = 0.0229311;
        M0["cg"] = 0.00426187;
        M0["ct"] = 0.0306705;
        M0["gA"] = 5.48559e-05;
        M0["gC"] = 4.20737e-05;
        M0["gG"] = 3.88974e-05;
        M0["gN"] = 1.28078e-08;
        M0["gT"] = 5.22559e-05;
        M0["ga"] = 0.026271;
        M0["gc"] = 0.0189006;
        M0["gg"] = 0.022942;
        M0["gt"] = 0.0227777;
        M0["na"] = 1.28078e-08;
        M0["nc"] = 2.56157e-08;
        M0["ng"] = 1.28078e-08;
        M0["tA"] = 7.67829e-05;
        M0["tC"] = 6.97386e-05;
        M0["tG"] = 9.14863e-05;
        M0["tN"] = 1.28078e-08;
        M0["tT"] = 9.00647e-05;
        M0["ta"] = 0.0296629;
        M0["tc"] = 0.0262005;
        M0["tg"] = 0.0329355;
        M0["tn"] = 5.12313e-08;
        M0["tt"] = 0.0436662;

        model M;
        M["AA"]['A'] = 0.382163;
        M["AA"]['C'] = 0.145436;
        M["AA"]['G'] = 0.206109;
        M["AA"]['T'] = 0.264132;
        M["AA"]['a'] = 0.000666418;
        M["AA"]['c'] = 0.000281918;
        M["AA"]['g'] = 0.000424461;
        M["AA"]['t'] = 0.000786788;
        M["AC"]['A'] = 0.408893;
        M["AC"]['C'] = 0.208105;
        M["AC"]['G'] = 0.0503234;
        M["AC"]['T'] = 0.329358;
        M["AC"]['a'] = 0.00115933;
        M["AC"]['c'] = 0.000427629;
        M["AC"]['g'] = 0.000163221;
        M["AC"]['t'] = 0.00157068;
        M["AG"]['A'] = 0.327878;
        M["AG"]['C'] = 0.192726;
        M["AG"]['G'] = 0.237672;
        M["AG"]['N'] = 3.67356e-07;
        M["AG"]['T'] = 0.239121;
        M["AG"]['a'] = 0.000729202;
        M["AG"]['c'] = 0.000410337;
        M["AG"]['g'] = 0.000489686;
        M["AG"]['t'] = 0.000973126;
        M["AN"]['A'] = 0.5;
        M["AN"]['T'] = 0.5;
        M["AT"]['A'] = 0.266324;
        M["AT"]['C'] = 0.161919;
        M["AT"]['G'] = 0.233994;
        M["AT"]['T'] = 0.335649;
        M["AT"]['a'] = 0.000573197;
        M["AT"]['c'] = 0.00033683;
        M["AT"]['g'] = 0.000451469;
        M["AT"]['t'] = 0.000753168;
        M["Aa"]['a'] = 0.362009;
        M["Aa"]['c'] = 0.131487;
        M["Aa"]['g'] = 0.206602;
        M["Aa"]['t'] = 0.299902;
        M["Ac"]['a'] = 0.465865;
        M["Ac"]['c'] = 0.208173;
        M["Ac"]['g'] = 0.0262019;
        M["Ac"]['t'] = 0.29976;
        M["Ag"]['a'] = 0.189477;
        M["Ag"]['c'] = 0.200392;
        M["Ag"]['g'] = 0.441506;
        M["Ag"]['t'] = 0.168626;
        M["At"]['a'] = 0.143226;
        M["At"]['c'] = 0.0960268;
        M["At"]['g'] = 0.207468;
        M["At"]['t'] = 0.553279;
        M["CA"]['A'] = 0.266035;
        M["CA"]['C'] = 0.192497;
        M["CA"]['G'] = 0.267241;
        M["CA"]['T'] = 0.271766;
        M["CA"]['a'] = 0.000464823;
        M["CA"]['c'] = 0.000375434;
        M["CA"]['g'] = 0.000772322;
        M["CA"]['t'] = 0.000849554;
        M["CC"]['A'] = 0.347124;
        M["CC"]['C'] = 0.249397;
        M["CC"]['G'] = 0.0485637;
        M["CC"]['T'] = 0.35253;
        M["CC"]['a'] = 0.000731109;
        M["CC"]['c'] = 0.000331632;
        M["CC"]['g'] = 0.000171515;
        M["CC"]['t'] = 0.00115013;
        M["CG"]['A'] = 0.221049;
        M["CG"]['C'] = 0.218952;
        M["CG"]['G'] = 0.262931;
        M["CG"]['T'] = 0.294432;
        M["CG"]['a'] = 0.000485572;
        M["CG"]['c'] = 0.000494347;
        M["CG"]['g'] = 0.000535299;
        M["CG"]['t'] = 0.00112033;
        M["CN"]['A'] = 0.25;
        M["CN"]['N'] = 0.75;
        M["CT"]['A'] = 0.19153;
        M["CT"]['C'] = 0.219238;
        M["CT"]['G'] = 0.275144;
        M["CT"]['N'] = 7.33608e-07;
        M["CT"]['T'] = 0.312252;
        M["CT"]['a'] = 0.000348464;
        M["CT"]['c'] = 0.000335626;
        M["CT"]['g'] = 0.000593122;
        M["CT"]['t'] = 0.000558276;
        M["Ca"]['a'] = 0.356286;
        M["Ca"]['c'] = 0.0887541;
        M["Ca"]['g'] = 0.155214;
        M["Ca"]['t'] = 0.399746;
        M["Cc"]['a'] = 0.425539;
        M["Cc"]['c'] = 0.21393;
        M["Cc"]['g'] = 0.0182421;
        M["Cc"]['t'] = 0.342289;
        M["Cg"]['a'] = 0.14332;
        M["Cg"]['c'] = 0.135223;
        M["Cg"]['g'] = 0.414575;
        M["Cg"]['t'] = 0.306883;
        M["Ct"]['a'] = 0.17682;
        M["Ct"]['c'] = 0.076523;
        M["Ct"]['g'] = 0.226226;
        M["Ct"]['t'] = 0.520431;
        M["GA"]['A'] = 0.362119;
        M["GA"]['C'] = 0.156496;
        M["GA"]['G'] = 0.254569;
        M["GA"]['N'] = 4.25444e-07;
        M["GA"]['T'] = 0.224704;
        M["GA"]['a'] = 0.00056031;
        M["GA"]['c'] = 0.000274411;
        M["GA"]['g'] = 0.000643271;
        M["GA"]['t'] = 0.000633486;
        M["GC"]['A'] = 0.35878;
        M["GC"]['C'] = 0.249081;
        M["GC"]['G'] = 0.0489179;
        M["GC"]['T'] = 0.34073;
        M["GC"]['a'] = 0.000840544;
        M["GC"]['c'] = 0.000416066;
        M["GC"]['g'] = 0.000128767;
        M["GC"]['t'] = 0.00110584;
        M["GG"]['A'] = 0.315446;
        M["GG"]['C'] = 0.208481;
        M["GG"]['G'] = 0.249696;
        M["GG"]['T'] = 0.223788;
        M["GG"]['a'] = 0.000626302;
        M["GG"]['c'] = 0.000399146;
        M["GG"]['g'] = 0.000568972;
        M["GG"]['t'] = 0.00099462;
        M["GN"]['N'] = 1;
        M["GT"]['A'] = 0.232106;
        M["GT"]['C'] = 0.186646;
        M["GT"]['G'] = 0.275396;
        M["GT"]['N'] = 5.03572e-07;
        M["GT"]['T'] = 0.303662;
        M["GT"]['a'] = 0.000512133;
        M["GT"]['c'] = 0.000406886;
        M["GT"]['g'] = 0.000571554;
        M["GT"]['t'] = 0.000697951;
        M["Ga"]['a'] = 0.420799;
        M["Ga"]['c'] = 0.0949297;
        M["Ga"]['g'] = 0.170429;
        M["Ga"]['t'] = 0.313842;
        M["Gc"]['a'] = 0.480625;
        M["Gc"]['c'] = 0.20375;
        M["Gc"]['g'] = 0.020625;
        M["Gc"]['t'] = 0.295;
        M["Gg"]['a'] = 0.213784;
        M["Gg"]['c'] = 0.134663;
        M["Gg"]['g'] = 0.424394;
        M["Gg"]['t'] = 0.227159;
        M["Gt"]['a'] = 0.236328;
        M["Gt"]['c'] = 0.0899646;
        M["Gt"]['g'] = 0.205845;
        M["Gt"]['t'] = 0.467862;
        M["NA"]['A'] = 0.25;
        M["NA"]['C'] = 0.25;
        M["NA"]['G'] = 0.5;
        M["NC"]['G'] = 0.5;
        M["NC"]['g'] = 0.5;
        M["NG"]['A'] = 0.75;
        M["NG"]['G'] = 0.25;
        M["NN"]['$'] = 2.92398e-07;
        M["NN"]['A'] = 2.92398e-07;
        M["NN"]['C'] = 2.92398e-07;
        M["NN"]['G'] = 8.77193e-07;
        M["NN"]['N'] = 0.999997;
        M["NN"]['T'] = 2.92398e-07;
        M["NN"]['c'] = 5.84795e-07;
        M["NT"]['A'] = 0.333333;
        M["NT"]['C'] = 0.333333;
        M["NT"]['G'] = 0.333333;
        M["Nc"]['c'] = 0.5;
        M["Nc"]['t'] = 0.5;
        M["TA"]['A'] = 0.33395;
        M["TA"]['C'] = 0.164644;
        M["TA"]['G'] = 0.188304;
        M["TA"]['N'] = 3.58432e-07;
        M["TA"]['T'] = 0.310356;
        M["TA"]['a'] = 0.000595356;
        M["TA"]['c'] = 0.00044123;
        M["TA"]['g'] = 0.00057851;
        M["TA"]['t'] = 0.00113085;
        M["TC"]['A'] = 0.335865;
        M["TC"]['C'] = 0.248108;
        M["TC"]['G'] = 0.0326452;
        M["TC"]['N'] = 1.69965e-06;
        M["TC"]['T'] = 0.38047;
        M["TC"]['a'] = 0.0008528;
        M["TC"]['c'] = 0.00036415;
        M["TC"]['g'] = 0.000150419;
        M["TC"]['t'] = 0.00154201;
        M["TG"]['A'] = 0.281224;
        M["TG"]['C'] = 0.197519;
        M["TG"]['G'] = 0.229306;
        M["TG"]['T'] = 0.288929;
        M["TG"]['a'] = 0.000704598;
        M["TG"]['c'] = 0.000390812;
        M["TG"]['g'] = 0.000619052;
        M["TG"]['t'] = 0.00130768;
        M["TN"]['A'] = 0.2;
        M["TN"]['C'] = 0.2;
        M["TN"]['N'] = 0.4;
        M["TN"]['T'] = 0.2;
        M["TT"]['A'] = 0.226081;
        M["TT"]['C'] = 0.206691;
        M["TT"]['G'] = 0.182354;
        M["TT"]['N'] = 4.83608e-07;
        M["TT"]['T'] = 0.382826;
        M["TT"]['a'] = 0.00046644;
        M["TT"]['c'] = 0.000308542;
        M["TT"]['g'] = 0.000464263;
        M["TT"]['t'] = 0.000807625;
        M["Ta"]['a'] = 0.356864;
        M["Ta"]['c'] = 0.157645;
        M["Ta"]['g'] = 0.214322;
        M["Ta"]['t'] = 0.271169;
        M["Tc"]['a'] = 0.398411;
        M["Tc"]['c'] = 0.238084;
        M["Tc"]['g'] = 0.0216659;
        M["Tc"]['t'] = 0.341839;
        M["Tg"]['a'] = 0.208739;
        M["Tg"]['c'] = 0.165524;
        M["Tg"]['g'] = 0.453516;
        M["Tg"]['t'] = 0.172221;
        M["Tt"]['a'] = 0.215378;
        M["Tt"]['c'] = 0.128597;
        M["Tt"]['g'] = 0.267873;
        M["Tt"]['t'] = 0.388152;
        M["aA"]['A'] = 0.395318;
        M["aA"]['C'] = 0.144954;
        M["aA"]['G'] = 0.166909;
        M["aA"]['T'] = 0.272544;
        M["aA"]['a'] = 0.00560099;
        M["aA"]['c'] = 0.00212837;
        M["aA"]['g'] = 0.00392069;
        M["aA"]['t'] = 0.00862552;
        M["aC"]['A'] = 0.40587;
        M["aC"]['C'] = 0.212002;
        M["aC"]['G'] = 0.0452159;
        M["aC"]['T'] = 0.310904;
        M["aC"]['a'] = 0.00847053;
        M["aC"]['c'] = 0.00405631;
        M["aC"]['g'] = 0.00167025;
        M["aC"]['t'] = 0.011811;
        M["aG"]['A'] = 0.330941;
        M["aG"]['C'] = 0.165704;
        M["aG"]['G'] = 0.198416;
        M["aG"]['T'] = 0.284995;
        M["aG"]['a'] = 0.00577819;
        M["aG"]['c'] = 0.00223672;
        M["aG"]['g'] = 0.00363467;
        M["aG"]['t'] = 0.0082945;
        M["aN"]['N'] = 1;
        M["aT"]['A'] = 0.304591;
        M["aT"]['C'] = 0.140336;
        M["aT"]['G'] = 0.215278;
        M["aT"]['T'] = 0.317805;
        M["aT"]['a'] = 0.00617284;
        M["aT"]['c'] = 0.00241127;
        M["aT"]['g'] = 0.00491898;
        M["aT"]['t'] = 0.00848765;
        M["aa"]['A'] = 0.00104142;
        M["aa"]['C'] = 0.00112383;
        M["aa"]['G'] = 0.00162008;
        M["aa"]['T'] = 0.00168094;
        M["aa"]['a'] = 0.403942;
        M["aa"]['c'] = 0.147814;
        M["aa"]['g'] = 0.190507;
        M["aa"]['t'] = 0.252271;
        M["ac"]['A'] = 0.000605721;
        M["ac"]['C'] = 0.000494111;
        M["ac"]['G'] = 0.000220415;
        M["ac"]['T'] = 0.000646663;
        M["ac"]['a'] = 0.406957;
        M["ac"]['c'] = 0.23384;
        M["ac"]['g'] = 0.0467779;
        M["ac"]['t'] = 0.310459;
        M["ag"]['A'] = 0.000620033;
        M["ag"]['C'] = 0.000381784;
        M["ag"]['G'] = 0.000431854;
        M["ag"]['T'] = 0.000492772;
        M["ag"]['a'] = 0.317547;
        M["ag"]['c'] = 0.198391;
        M["ag"]['g'] = 0.251755;
        M["ag"]['t'] = 0.230381;
        M["at"]['A'] = 0.000579941;
        M["at"]['C'] = 0.0005996;
        M["at"]['G'] = 0.00106486;
        M["at"]['T'] = 0.000746678;
        M["at"]['a'] = 0.277014;
        M["at"]['c'] = 0.17301;
        M["at"]['g'] = 0.233513;
        M["at"]['t'] = 0.313472;
        M["cA"]['A'] = 0.309868;
        M["cA"]['C'] = 0.173049;
        M["cA"]['G'] = 0.262991;
        M["cA"]['T'] = 0.232639;
        M["cA"]['a'] = 0.00603846;
        M["cA"]['c'] = 0.00365485;
        M["cA"]['g'] = 0.00524392;
        M["cA"]['t'] = 0.00651518;
        M["cC"]['A'] = 0.390876;
        M["cC"]['C'] = 0.250344;
        M["cC"]['G'] = 0.0518111;
        M["cC"]['T'] = 0.283356;
        M["cC"]['a'] = 0.00802384;
        M["cC"]['c'] = 0.00229253;
        M["cC"]['g'] = 0.00298028;
        M["cC"]['t'] = 0.0103164;
        M["cG"]['A'] = 0.300957;
        M["cG"]['C'] = 0.192789;
        M["cG"]['G'] = 0.221486;
        M["cG"]['T'] = 0.253863;
        M["cG"]['a'] = 0.00588668;
        M["cG"]['c'] = 0.0103017;
        M["cG"]['g'] = 0.00735835;
        M["cG"]['t'] = 0.00735835;
        M["cT"]['A'] = 0.235318;
        M["cT"]['C'] = 0.206299;
        M["cT"]['G'] = 0.298446;
        M["cT"]['T'] = 0.244808;
        M["cT"]['a'] = 0.00330078;
        M["cT"]['c'] = 0.00192546;
        M["cT"]['g'] = 0.00495118;
        M["cT"]['t'] = 0.00495118;
        M["ca"]['A'] = 0.000923728;
        M["ca"]['C'] = 0.000715345;
        M["ca"]['G'] = 0.000944333;
        M["ca"]['N'] = 3.88774e-07;
        M["ca"]['T'] = 0.000822647;
        M["ca"]['a'] = 0.262742;
        M["ca"]['c'] = 0.213983;
        M["ca"]['g'] = 0.27024;
        M["ca"]['t'] = 0.249629;
        M["cc"]['A'] = 0.00164656;
        M["cc"]['C'] = 0.00106736;
        M["cc"]['G'] = 0.000306078;
        M["cc"]['T'] = 0.00175995;
        M["cc"]['a'] = 0.368639;
        M["cc"]['c'] = 0.238669;
        M["cc"]['g'] = 0.0503772;
        M["cc"]['t'] = 0.337536;
        M["cg"]['A'] = 0.000348605;
        M["cg"]['C'] = 0.000192334;
        M["cg"]['G'] = 0.000198344;
        M["cg"]['T'] = 0.000267464;
        M["cg"]['a'] = 0.233274;
        M["cg"]['c'] = 0.243738;
        M["cg"]['g'] = 0.270923;
        M["cg"]['t'] = 0.251059;
        M["ct"]['A'] = 0.000552059;
        M["ct"]['C'] = 0.000379593;
        M["ct"]['G'] = 0.000462694;
        M["ct"]['N'] = 4.17594e-07;
        M["ct"]['T'] = 0.000600917;
        M["ct"]['a'] = 0.186326;
        M["ct"]['c'] = 0.249215;
        M["ct"]['g'] = 0.289709;
        M["ct"]['n'] = 4.17594e-07;
        M["ct"]['t'] = 0.272755;
        M["gA"]['A'] = 0.302125;
        M["gA"]['C'] = 0.201728;
        M["gA"]['G'] = 0.228578;
        M["gA"]['T'] = 0.252393;
        M["gA"]['a'] = 0.00280177;
        M["gA"]['c'] = 0.00326874;
        M["gA"]['g'] = 0.00396918;
        M["gA"]['t'] = 0.00513659;
        M["gC"]['A'] = 0.341553;
        M["gC"]['C'] = 0.240791;
        M["gC"]['G'] = 0.056621;
        M["gC"]['T'] = 0.34551;
        M["gC"]['a'] = 0.00547945;
        M["gC"]['c'] = 0.0021309;
        M["gC"]['g'] = 0.00243531;
        M["gC"]['t'] = 0.00547945;
        M["gG"]['A'] = 0.276589;
        M["gG"]['C'] = 0.217978;
        M["gG"]['G'] = 0.207442;
        M["gG"]['T'] = 0.274613;
        M["gG"]['a'] = 0.00460981;
        M["gG"]['c'] = 0.00460981;
        M["gG"]['g'] = 0.0059269;
        M["gG"]['t'] = 0.00823181;
        M["gN"]['N'] = 1;
        M["gT"]['A'] = 0.294363;
        M["gT"]['C'] = 0.156618;
        M["gT"]['G'] = 0.265441;
        M["gT"]['T'] = 0.266176;
        M["gT"]['a'] = 0.00514706;
        M["gT"]['c'] = 0.00220588;
        M["gT"]['g'] = 0.00367647;
        M["gT"]['t'] = 0.00637255;
        M["ga"]['A'] = 0.000557244;
        M["ga"]['C'] = 0.000366133;
        M["ga"]['G'] = 0.00039636;
        M["ga"]['T'] = 0.000498253;
        M["ga"]['a'] = 0.319452;
        M["ga"]['c'] = 0.156394;
        M["ga"]['g'] = 0.290879;
        M["ga"]['t'] = 0.231457;
        M["gc"]['A'] = 0.00068442;
        M["gc"]['C'] = 0.000424205;
        M["gc"]['G'] = 0.000130785;
        M["gc"]['T'] = 0.00104831;
        M["gc"]['a'] = 0.337884;
        M["gc"]['c'] = 0.282904;
        M["gc"]['g'] = 0.0549731;
        M["gc"]['t'] = 0.321951;
        M["gg"]['A'] = 0.000572786;
        M["gg"]['C'] = 0.000399722;
        M["gg"]['G'] = 0.000367342;
        M["gg"]['T'] = 0.000501327;
        M["gg"]['a'] = 0.293329;
        M["gg"]['c'] = 0.233539;
        M["gg"]['g'] = 0.238516;
        M["gg"]['t'] = 0.232775;
        M["gt"]['A'] = 0.000544865;
        M["gt"]['C'] = 0.000305327;
        M["gt"]['G'] = 0.000346374;
        M["gt"]['T'] = 0.000531932;
        M["gt"]['a'] = 0.224626;
        M["gt"]['c'] = 0.179844;
        M["gt"]['g'] = 0.310262;
        M["gt"]['t'] = 0.28354;
        M["na"]['a'] = 1;
        M["nc"]['t'] = 1;
        M["ng"]['a'] = 1;
        M["tA"]['A'] = 0.327273;
        M["tA"]['C'] = 0.16397;
        M["tA"]['G'] = 0.171476;
        M["tA"]['T'] = 0.312927;
        M["tA"]['a'] = 0.006005;
        M["tA"]['c'] = 0.00350292;
        M["tA"]['g'] = 0.00550459;
        M["tA"]['t'] = 0.00934112;
        M["tC"]['A'] = 0.355188;
        M["tC"]['C'] = 0.209917;
        M["tC"]['G'] = 0.0372819;
        M["tC"]['T'] = 0.377227;
        M["tC"]['a'] = 0.00550964;
        M["tC"]['c'] = 0.00220386;
        M["tC"]['g'] = 0.00165289;
        M["tC"]['t'] = 0.0110193;
        M["tG"]['A'] = 0.289794;
        M["tG"]['C'] = 0.184936;
        M["tG"]['G'] = 0.187736;
        M["tG"]['T'] = 0.314994;
        M["tG"]['a'] = 0.00363993;
        M["tG"]['c'] = 0.00321994;
        M["tG"]['g'] = 0.00447991;
        M["tG"]['t'] = 0.0111998;
        M["tN"]['G'] = 1;
        M["tT"]['A'] = 0.226251;
        M["tT"]['C'] = 0.181172;
        M["tT"]['G'] = 0.182594;
        M["tT"]['T'] = 0.39178;
        M["tT"]['a'] = 0.0039818;
        M["tT"]['c'] = 0.0019909;
        M["tT"]['g'] = 0.00455063;
        M["tT"]['t'] = 0.00767918;
        M["ta"]['A'] = 0.000791019;
        M["ta"]['C'] = 0.000834197;
        M["ta"]['G'] = 0.000831174;
        M["ta"]['T'] = 0.000629534;
        M["ta"]['a'] = 0.304913;
        M["ta"]['c'] = 0.173244;
        M["ta"]['g'] = 0.192562;
        M["ta"]['t'] = 0.326195;
        M["tc"]['A'] = 0.000613493;
        M["tc"]['C'] = 0.000461464;
        M["tc"]['G'] = 0.000109989;
        M["tc"]['T'] = 0.000694152;
        M["tc"]['a'] = 0.333165;
        M["tc"]['c'] = 0.256891;
        M["tc"]['g'] = 0.0379882;
        M["tc"]['t'] = 0.370077;
        M["tg"]['A'] = 0.00064359;
        M["tg"]['C'] = 0.000618313;
        M["tg"]['G'] = 0.000496984;
        M["tg"]['N'] = 3.88876e-07;
        M["tg"]['T'] = 0.000743531;
        M["tg"]['a'] = 0.265714;
        M["tg"]['c'] = 0.193493;
        M["tg"]['g'] = 0.257476;
        M["tg"]['t'] = 0.280814;
        M["tn"]['a'] = 0.25;
        M["tn"]['c'] = 0.5;
        M["tn"]['g'] = 0.25;
        M["tt"]['A'] = 0.000619182;
        M["tt"]['C'] = 0.000688111;
        M["tt"]['G'] = 0.000731521;
        M["tt"]['T'] = 0.000761439;
        M["tt"]['a'] = 0.205915;
        M["tt"]['c'] = 0.190667;
        M["tt"]['g'] = 0.198211;
        M["tt"]['n'] = 8.79937e-07;
        M["tt"]['t'] = 0.402405;

        std::string s;
        s.reserve(p_max);
        {
            double u = U(rng);
            for (auto itr = M0.begin(); itr != M0.end(); ++itr)
            {
                if (u <= itr->second)
                {
                    s += itr->first;
                    break;
                }
                u -= itr->second;
            }

            while (s.size() < p_max)
            {
                std::string ctx(s.end() - 2, s.end());
                auto itr = M.find(ctx);
                if (itr == M.end())
                {
                    return s;
                }
                double u = U(rng);
                for (auto jtr = itr->second.begin(); jtr != itr->second.end(); ++jtr)
                {
                    if (u <= jtr->second)
                    {
                        s.push_back(jtr->first);
                        break;
                    }
                    u -= jtr->second;
                }
            }
            return s;
        }
    }

    void build_model()
    {
        varoom::input_file_holder_ptr inp = varoom::files::in("data/hg19/chr18.txt");
        std::istream& in = **inp;
        std::string s;

        in.seekg(0, std::ios::end);
        s.reserve(in.tellg());
        in.seekg(0, std::ios::beg);

        s.assign((std::istreambuf_iterator<char>(in)), std::istreambuf_iterator<char>());

        size_t K = 2;
        learn_model(s, K);

    }
}
// namespace anonymous

BOOST_AUTO_TEST_CASE( enc1 )
{
    std::string s = run_model(17, 16*1024*1024);

    varoom::seq::kimmo::make(s, "tests/tmp/chrV.kimmo.gz");

    varoom::seq::kimmo S("tests/tmp/chrV.kimmo.gz");

    BOOST_REQUIRE_EQUAL(S.size(), s.size());
    for (size_t i = 0; i < 10; ++i)
    {
        BOOST_CHECK_EQUAL(S[i], s[i]);
    }

    for (size_t i = s.size() - 10; i < s.size(); ++i)
    {
        BOOST_CHECK_EQUAL(S[i], s[i]);
    }

    std::mt19937_64 rng(17);
    std::uniform_int_distribution<size_t> Z(0, s.size() - 1);
    for (size_t i = 0; i < 100; ++i)
    {
        size_t j = Z(rng);
        BOOST_CHECK_EQUAL(S[j], s[j]);
    }

    size_t M = 1000;
    for (size_t i = 0; i < 100; ++i)
    {
        size_t j0 = Z(rng);
        size_t j1 = j0 + M;
        while (j1 > s.size())
        {
            j0 = Z(rng);
            j1 = j0 + M;
        }
        BOOST_CHECK_EQUAL(S.slice(j0, j1), s.substr(j0, M));
    }

}
